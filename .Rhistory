theme_bw() + theme(#axis.text.x=element_blank(),
#axis.text.y=element_blank(),
#axis.title.x=element_blank(),
#axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank())
#set.seed(12345)
library(reshape2)
library(ggplot2)
library(ggpubr)
library(colorspace)
library(dplyr)
library(magick)
library(gganimate)
library(gifski)
library(purrr)
library(transformr)
library(missMethods)
### PARAMETERS
rm(list=ls())
basic_data = function(x_min = 0,
x_max = 10,
n_obs=500,
int=2,
slope=1,
sigma=2,
sshare=0.2){
x <- runif(n_obs, x_min, x_max)
y <- int + slope *x + rnorm(n_obs, mean=0, sd=sigma)
insample <- rbernoulli(n_obs, sshare)
df <- data.frame(x, y, insample)
df %>% mutate(group = ifelse(insample=="TRUE", 1, 2)) %>% select(-insample)
#data.frame(x, y, x1)
}
popdata <- basic_data(n_obs=100, sigma=2, sshare=0.1)
popreg <- lm(formula = y ~ x, data = popdata)
line.int <- popreg$coefficients[1]
line.slo <- popreg$coefficients[2]
popdata %>%
ggplot(aes(x=x,y=y)) +
geom_point(alpha=0.5, aes(colour=factor(group))) +
scale_color_manual(values=c("red", "darkgrey")) +
labs(x= "X", y="Y")+
geom_smooth(data=subset(popdata, group==1), method=lm, se=FALSE, color="darkorange", size=2) +
geom_abline(intercept = line.int, slope = line.slo, color="grey")+
theme_bw() + theme(#axis.text.x=element_blank(),
#axis.text.y=element_blank(),
#axis.title.x=element_blank(),
#axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank())
#set.seed(12345)
library(reshape2)
library(ggplot2)
library(ggpubr)
library(colorspace)
library(dplyr)
library(magick)
library(gganimate)
library(gifski)
library(purrr)
library(transformr)
library(missMethods)
### PARAMETERS
rm(list=ls())
basic_data = function(x_min = 0,
x_max = 10,
n_obs=500,
int=2,
slope=1,
sigma=2,
sshare=0.2){
x <- runif(n_obs, x_min, x_max)
y <- int + slope *x + rnorm(n_obs, mean=0, sd=sigma)
insample <- rbernoulli(n_obs, sshare)
df <- data.frame(x, y, insample)
df %>% mutate(group = ifelse(insample=="TRUE", 1, 2)) %>% select(-insample)
#data.frame(x, y, x1)
}
popdata <- basic_data(n_obs=100, sigma=2, sshare=0.1)
popreg <- lm(formula = y ~ x, data = popdata)
line.int <- popreg$coefficients[1]
line.slo <- popreg$coefficients[2]
popdata %>%
ggplot(aes(x=x,y=y)) +
geom_point(alpha=0.5, aes(colour=factor(group))) +
scale_color_manual(values=c("red", "darkgrey")) +
labs(x= "X", y="Y")+
geom_smooth(data=subset(popdata, group==1), method=lm, se=FALSE, color="darkorange", size=2) +
geom_abline(intercept = line.int, slope = line.slo, color="grey")+
theme_bw() + theme(#axis.text.x=element_blank(),
#axis.text.y=element_blank(),
#axis.title.x=element_blank(),
#axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank())
#set.seed(12345)
library(reshape2)
library(ggplot2)
library(ggpubr)
library(colorspace)
library(dplyr)
library(magick)
library(gganimate)
library(gifski)
library(purrr)
library(transformr)
library(missMethods)
### PARAMETERS
rm(list=ls())
basic_data = function(x_min = 0,
x_max = 10,
n_obs=500,
int=2,
slope=1,
sigma=2,
sshare=0.2){
x <- runif(n_obs, x_min, x_max)
y <- int + slope *x + rnorm(n_obs, mean=0, sd=sigma)
insample <- rbernoulli(n_obs, sshare)
df <- data.frame(x, y, insample)
df %>% mutate(group = ifelse(insample=="TRUE", 1, 2)) %>% select(-insample)
#data.frame(x, y, x1)
}
popdata <- basic_data(n_obs=100, sigma=2, sshare=0.1)
popreg <- lm(formula = y ~ x, data = popdata)
line.int <- popreg$coefficients[1]
line.slo <- popreg$coefficients[2]
popdata %>%
ggplot(aes(x=x,y=y)) +
geom_point(alpha=0.5, aes(colour=factor(group))) +
scale_color_manual(values=c("red", "darkgrey")) +
labs(x= "X", y="Y")+
geom_smooth(data=subset(popdata, group==1), method=lm, se=FALSE, color="darkorange", size=2) +
geom_abline(intercept = line.int, slope = line.slo, color="grey")+
theme_bw() + theme(#axis.text.x=element_blank(),
#axis.text.y=element_blank(),
#axis.title.x=element_blank(),
#axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank())
#set.seed(12345)
library(reshape2)
library(ggplot2)
library(ggpubr)
library(colorspace)
library(dplyr)
library(magick)
library(gganimate)
library(gifski)
library(purrr)
library(transformr)
library(missMethods)
### PARAMETERS
rm(list=ls())
basic_data = function(x_min = 0,
x_max = 10,
n_obs=500,
int=2,
slope=1,
sigma=2,
sshare=0.2){
x <- runif(n_obs, x_min, x_max)
y <- int + slope *x + rnorm(n_obs, mean=0, sd=sigma)
insample <- rbernoulli(n_obs, sshare)
df <- data.frame(x, y, insample)
df %>% mutate(group = ifelse(insample=="TRUE", 1, 2)) %>% select(-insample)
#data.frame(x, y, x1)
}
popdata <- basic_data(n_obs=100, sigma=2, sshare=0.1)
popreg <- lm(formula = y ~ x, data = popdata)
line.int <- popreg$coefficients[1]
line.slo <- popreg$coefficients[2]
popdata %>%
ggplot(aes(x=x,y=y)) +
geom_point(alpha=0.5, aes(colour=factor(group))) +
scale_color_manual(values=c("red", "darkgrey")) +
labs(x= "X", y="Y")+
geom_smooth(data=subset(popdata, group==1), method=lm, se=FALSE, color="darkorange", size=2) +
geom_abline(intercept = line.int, slope = line.slo, color="grey")+
theme_bw() + theme(#axis.text.x=element_blank(),
#axis.text.y=element_blank(),
#axis.title.x=element_blank(),
#axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank())
library(haven)
data <- read_dta('/Users/ben_elsner/econometrics-ug/Project/data_oreopoulos.dta')
View(data)
path <- '/Users/ben_elsner/econometrics-ug/'
library(haven)
library(dplyr)
path <- '/Users/ben_elsner/econometrics-ug/'
rawdata <- read_dta(paste(path, 'Project/data_oreopoulos.dta', sep=""))
data <- rawdata %>%
filter(firmid <= 4000)
View(data)
View(rawdata)
#################################################
# Econometrics Data Science Project Autumn 2022
# Data prep
library(haven)
library(dplyr)
path <- '/Users/ben_elsner/econometrics-ug/'
rawdata <- read_dta(paste(path, 'Project/data_oreopoulos.dta', sep=""))
data <- rawdata %>%
filter(firmid > 0)
data <- rawdata %>%
filter(firmid > 0 & firmid <=4000)
View(data)
#################################################
# Econometrics Data Science Project Autumn 2022
# Data prep
library(haven)
library(dplyr)
path <- '/Users/ben_elsner/econometrics-ug/'
rawdata <- read_dta(paste(path, 'Project/data_oreopoulos.dta', sep=""))
data <- rawdata %>%
filter(firmid > 0 & firmid <=4000) %>%
select(occupation_type, name_ethnicity, name, type, chinese, indian, british)
write_dta(data, paste(path, 'Project/data_project_autumn2022.dta', sep=""))
write.csv(data, paste(path, 'Project/data_project_autumn2022.csv', sep=""))
table(data$name_ethnicity)
View(rawdata)
table(rawdata$name_ethnicity)
library(haven)
library(dplyr)
path <- '/Users/ben_elsner/econometrics-ug/'
rawdata <- read_dta(paste(path, 'Project/data_oreopoulos.dta', sep=""))
data <- rawdata %>%
filter(firmid > 0 & firmid <=4000) %>%
filter(name_ethnicity != 'British') %>%
select(occupation_type, name_ethnicity, name, type, callback, second_callback)
write_dta(data, paste(path, 'Project/data_project_autumn2022.dta', sep=""))
write.csv(data, paste(path, 'Project/data_project_autumn2022.csv', sep=""))
table(data$name_ethnicity)
path <- '/Users/ben_elsner/econometrics-ug/'
rawdata <- read_dta(paste(path, 'Project/data_oreopoulos.dta', sep=""))
data <- rawdata %>%
filter(firmid > 0 & firmid <=4000) %>%
filter(name_ethnicity != 'British') %>%
rename(ethnicity=name_ethnicity, secondcallback=second_callback) %>%
select(occupation_type, ethnicity, name, type, callback, secondcallback, female)
write_dta(data, paste(path, 'Project/data_project_autumn2022.dta', sep=""))
write.csv(data, paste(path, 'Project/data_project_autumn2022.csv', sep=""))
data <- rawdata %>%
filter(firmid > 0 & firmid <=4000) %>%
filter(name_ethnicity != 'British') %>%
rename(ethnicity=name_ethnicity, secondcallback=second_callback,
baquality=ba_quality, extracurricular=extracurricular_skills) %>%
select(occupation_type, ethnicity, name,
type, callback, secondcallback, female,
baquality, extracurricular)
nrsamples <- 500
n <- 100
simulation <- function(n){
df <- data.frame(X=rnorm(n, mean=100, sd=15), u=rnorm(n, mean=0, sd=8))
}
simulation(100)
df <- simulation(100)
View(df)
simulation <- function(n){
df <- data.frame(X=rnorm(n, mean=100, sd=15), u=rnorm(n, mean=0, sd=8))
df$y <- 2*df$X + df$u
}
df <- simulation(100)
simulation <- function(n){
X <- rnorm(n, mean=100, sd=15)
u <- rnorm(n, mean=0, sd=8)
y <- 2*X + u
df <- as.data.frame(y, X, u)
return(df)
}
df <- simulation(100)
simulation <- function(n){
X <- rnorm(n, mean=100, sd=15)
u <- rnorm(n, mean=0, sd=8)
y <- 2*X + u
df <- as.data.frame(y, X, u, rownames=FALSE)
return(df)
}
df <- simulation(100)
X <- rnorm(n, mean=100, sd=15)
u <- rnorm(n, mean=0, sd=8)
y <- 2*X + u
df <- data.frame(y, X, u)
View(df)
coef <- lm(y ~ X, df)
View(coef)
coef$coefficients
summary(coef)
summary(coef)$coefficients
X <- rnorm(n, mean=100, sd=15)
u <- rnorm(n, mean=0, sd=15)
y <- 2*X + u
df <- data.frame(y, X, u)
coef <- lm(y ~ X, df)
pvalue <- summary(coef)$coefficients[2, 4]
X <- rnorm(n, mean=100, sd=15)
u <- rnorm(n, mean=0, sd=50)
y <- 2*X + u
df <- data.frame(y, X, u)
coef <- lm(y ~ X, df)
pvalue <- summary(coef)$coefficients[2, 4]
X <- rnorm(n, mean=100, sd=15)
u <- rnorm(n, mean=0, sd=100)
y <- 2*X + u
df <- data.frame(y, X, u)
coef <- lm(y ~ X, df)
pvalue <- summary(coef)$coefficients[2, 4]
X <- rnorm(n, mean=100, sd=15)
u <- rnorm(n, mean=0, sd=200)
y <- 2*X + u
df <- data.frame(y, X, u)
coef <- lm(y ~ X, df)
pvalue <- summary(coef)$coefficients[2, 4]
X <- rnorm(n, mean=100, sd=15)
u <- rnorm(n, mean=0, sd=150)
y <- 2*X + u
df <- data.frame(y, X, u)
coef <- lm(y ~ X, df)
pvalue <- summary(coef)$coefficients[2, 4]
simulation(n, 100)
simulation(n, sdp=100)
simulation <- function(n, sdp){
X <- rnorm(n, mean=100, sd=15)
u <- rnorm(n, mean=0, sd=sdp)
y <- 2*X + u
df <- data.frame(y, X, u)
coef <- lm(y ~ X, df)
pvalue <- summary(coef)$coefficients[2, 4]
return(pvalue)
}
simulation(n, sdp=100)
simulation(n, sdp=100)
simulation(n, sdp=150)
simdata <- data.frame(nr=seq(from=1, to=nrsamples, by=1))
View(simdata)
simdata$pvalue1 <- apply(simdata$nr, simulation(n, sdp=100))
pvalue1 <- NULL
pvalue2 <- NULL
for (i in 1:nrsamples){
pvalue1 = simulation(n, 100)
pvalue2 = simulation(n, 100)
}
pvalue1 <- vector(mode="character", length=nrsamples)
pvalue2 <- vector(mode="character", length=nrsamples)
for (i in 1:nrsamples){
pvalue1[i] = simulation(n, 100)
pvalue2[i] = simulation(n, 100)
}
for (i in 1:nrsamples){
pvalue1[i] = simulation(n, 150)
pvalue2[i] = simulation(n, 200)
}
hist(pvalue1)
plot(pvalue1)
pvalue1 <- vector(mode="numeric", length=nrsamples)
pvalue2 <- vector(mode="numeric", length=nrsamples)
for (i in 1:nrsamples){
pvalue1[i] = simulation(n, 150)
pvalue2[i] = simulation(n, 200)
}
hist(pvalue1)
mean(pvalue1)
mean(pvalue2)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, results=TRUE)
rm(list=ls())
ucd <- 0
# Packages
library(stargazer)
library(tidyverse)
if (ucd == 1) {
path <- "C:/Users/ben_elsner/Lectures/econometrics-ug"
} else {
path <- "/Users/ben_elsner/econometrics-ug"
}
library(wooldridge)
data.frame(data('sleep75'))
force(sleep75)
View(sleep75)
library(wooldridge)
data.frame(data('sleep75'))
sleepdata <- sleep75 %>%
select(age, educ, earns74, sleep) %>%
rename(earns=earns74)
View(sleepdata)
mediansleep <- quantile(sleepdata$sleep, probs=0.5)
sleepdata %>%
filter(earns>0) %>%
mutate(goodsleeper=ifelse(sleep > mediansleep, 0, 1)) %>%
group_by(goodsleeper) %>%
summarise(mean(earn))
mediansleep <- quantile(sleepdata$sleep, probs=0.5)
sleepdata %>%
filter(earns>0) %>%
mutate(goodsleeper=ifelse(sleep > mediansleep, 0, 1)) %>%
group_by(goodsleeper) %>%
summarise(mean(earns))
mediansleep <- quantile(sleepdata$sleep, probs=0.5)
newdata <- sleepdata %>%
filter(earns>0) %>%
mutate(goodsleeper=ifelse(sleep > mediansleep, 0, 1))
newdata %>%   group_by(goodsleeper) %>%
summarise(mean(earns))
newdata1 <- sleepdata %>%
mutate(older = ifelse(age>50, 1,0))
t.test(sleep ~ older, data=newdata1)
newdata1 <- sleepdata %>%
mutate(older = ifelse(age>50, 1,0))
t.test(sleep ~ older, data=newdata1)
newdata1 <- sleepdata %>%
mutate(older = ifelse(age>50, 1,0))
t.test(sleep ~ older, data=newdata1)
lm(sleep ~ age + earns, data=newdata1)
newdata1 <- sleepdata %>%
mutate(older = ifelse(age>50, 1,0), logearns=log(earns))
t.test(sleep ~ older, data=newdata1)
lm(sleep ~ age + logearns, data=newdata1)
newdata1 <- newdata %>%
mutate(older = ifelse(age>50, 1,0), logearns=log(earns))
t.test(sleep ~ older, data=newdata1)
lm(sleep ~ age + logearns, data=newdata1)
View(sleep75)
regdata <- sleepdata %>%
mutate(logearns=log(earns+1),
sleephrs=sleep/(60*7),
logsleephrs=log(sleephrs))
View(regdata)
regdata <- sleepdata %>%
mutate(logearns=log(earns+1),
sleephrs=sleep/(60*7),
logsleephrs=log(sleephrs))
reg1 <- lm(sleephrs ~ logearns, data=regdata)
reg2 <- lm(sleephrs ~ logearns + age, data=regdata)
reg3 <- lm(lsleephrs ~ logearns + age, data=regdata)
regdata <- sleepdata %>%
mutate(logearns=log(earns+1),
sleephrs=sleep/(60*7),
logsleephrs=log(sleephrs))
reg1 <- lm(sleephrs ~ logearns, data=regdata)
reg2 <- lm(sleephrs ~ logearns + age, data=regdata)
reg3 <- lm(logsleephrs ~ logearns + age, data=regdata)
stargazer(reg1, reg2, reg3,
type='latex',
header=FALSE,
omit.stat=c("LL","ser","f"),
digits=2,
#covariate.labels=c(NA, NA, NA, "lavginc*top25", NA, NA),
dep.var.labels.include = FALSE,
#column.labels=c("log(rent)", "log(rent)", "rent", "log(rent)", "log(rent)")
)
stargazer(reg1, reg2, reg3,
type='latex',
header=FALSE,
omit.stat=c("LL","ser","f"),
digits=2,
#covariate.labels=c(NA, NA, NA, "lavginc*top25", NA, NA),
dep.var.labels.include = FALSE,
column.labels=c("Sleep", "Sleep", "Log(sleep)")
)
regdata <- sleepdata %>%
mutate(logearns=log(earns+1),
sleepday=sleep/(7),
logsleepday=log(sleepday),
bottomthird=ifelse(pop<quantile(earns, probs=0.33), 1, 0),
middlethird=ifelse(pop<quantile(pop, probs=0.66) & pop>quantile(pop, probs=0.33), 1, 0),
topthird=ifelse(pop>quantile(pop, probs=0.66), 1, 0))
regdata <- sleepdata %>%
mutate(logearns=log(earns+1),
sleepday=sleep/(7),
logsleepday=log(sleepday),
bottomthird=ifelse(earns<quantile(earns, probs=0.33), 1, 0),
middlethird=ifelse(earns<quantile(earns, probs=0.66) & earns>quantile(earns, probs=0.33), 1, 0),
topthird=ifelse(earns>quantile(earns, probs=0.66), 1, 0))
reg1 <- lm(sleepday ~ logearns, data=regdata)
reg2 <- lm(sleepday ~ logearns + age, data=regdata)
reg3 <- lm(logsleepday ~ logearns + age, data=regdata)
reg4 <- lm(logsleepday ~ topthird + middlethird, data=regdata)
#################################################
# Econometrics Data Science Project Autumn 2022
# Data prep
library(haven)
library(dplyr)
path <- '/Users/ben_elsner/econometrics-ug/'
rawdata <- read_dta(paste(path, 'Project/data_oreopoulos.dta', sep=""))
data <- rawdata %>%
filter(firmid > 0 & firmid <=4000) %>%
filter(name_ethnicity != 'British') %>%
rename(ethnicity=name_ethnicity, secondcallback=second_callback,
baquality=ba_quality, extracurricular=extracurricular_skills) %>%
select(occupation_type, ethnicity, name,
type, callback, secondcallback, female,
baquality, extracurricular)
write_dta(data, paste(path, 'Project/data_project_autumn2022.dta', sep=""))
write.csv(data, paste(path, 'Project/data_project_autumn2022.csv', sep=""))
View(data)
